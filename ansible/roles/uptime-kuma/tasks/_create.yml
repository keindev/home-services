---
- name: Create Uptime Kuma container
  docker_container:
    name: "{{ uptime_kuma_name }}"
    image: "{{ uptime_kuma_image }}"
    pull: yes
    restart_policy: "unless-stopped"
    recreate: true
    networks:
      - name: "{{ network }}"
    etc_hosts: >
      {
        "{{ penpot_name }}.{{ domain }}": "{{ hostvars[pihole_host]['ansible_default_ipv4']['address'] }}",
        "{{ planka_name }}.{{ domain }}": "{{ hostvars[planka_host]['ansible_default_ipv4']['address'] }}",
        "{{ gitea_name }}.{{ domain }}": "{{ hostvars[gitea_host]['ansible_default_ipv4']['address'] }}",
        "{{ grafana_name }}.{{ domain }}": "{{ hostvars[grafana_host]['ansible_default_ipv4']['address'] }}"
      }
    volumes: "{{ uptime_kuma_volumes }}"
    labels:
      traefik.enable: "true"
      traefik.http.middlewares.uptime-kuma-https-redirect.redirectscheme.scheme: "https"
      traefik.http.routers.uptime-kuma.entrypoints: "http"
      traefik.http.routers.uptime-kuma.rule: "Host(`{{ uptime_kuma_name }}.{{ domain }}`)"
      traefik.http.routers.uptime-kuma.middlewares: "uptime-kuma-https-redirect"
      traefik.http.routers.uptime-kuma-secure.entrypoints: "https"
      traefik.http.routers.uptime-kuma-secure.rule: "Host(`{{ uptime_kuma_name }}.{{ domain }}`)"
      traefik.http.routers.uptime-kuma-secure.tls: "true"
      traefik.http.routers.uptime-kuma-secure.service: "{{ uptime_kuma_name }}"
      traefik.http.services.uptime-kuma.loadbalancer.server.port: "{{ uptime_kuma_port }}"
      traefik.docker.network: "{{ network }}"
